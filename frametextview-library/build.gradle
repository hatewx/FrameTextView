apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

version = '0.0.1'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.1.1'
}

group = "com.in404.frametextview"

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'An animation or timely Frame TextView'
                licenses {
                    license {
                        name 'Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0'
                    }
                }
                developers {
                    developer {
                        id 'in404dev'
                        name 'Shawn Wang'
                        email 'in404dev@gmail.com'
                    }
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    //from android.sourceSets.main.res.values
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = "maven"  //发布到Bintray的那个仓库里，默认账户有四个库，我们这里上传到maven库
        name = "FrameTextView"  //发布到Bintray上的项目名字
        websiteUrl = ""
        vcsUrl = ""
        licenses = ["Apache-2.0"]
        publish = true
    }
}


// task to delete the old jar
task deleteOldJar(type: Delete) {
    delete 'release/frametextview.jar'
}

task exportJar(type: Copy) {
    from('build/intermediates/bundles/release')
    into('release/')
    include('classes.jar', 'res/')
    //rename('classes.jar', 'frametextview.jar')
}

exportJar.dependsOn(deleteOldJar, build)
